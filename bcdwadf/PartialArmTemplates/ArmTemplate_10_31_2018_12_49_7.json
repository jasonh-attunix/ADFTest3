{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "bcdwadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BCConnect_Builder_only_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pulls from Postgres into json, loads from json to Staging",
				"activities": [
					{
						"name": "Load_PostGres_Builder_to_json",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"public\".\"builder\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "builder"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "builder"
								}
							}
						]
					},
					{
						"name": "pull_builder_json_to_staging",
						"description": "Reads builder.json, executes sp and loads staging.builder",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_PostGres_Builder_to_json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "builder.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BCConnect_Public_builder",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/BCConnect_Public_builder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BCConnect_Builder_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BCConnect_pipe_builder",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"public\".\"builder\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "builder.json"
								}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataset": {
								"referenceName": "TableMetaData",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure"
							]
						}
					},
					{
						"name": "BCConnect_pipe_dealercontact",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "BCConnect_pipe_builder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"public\".\"dealercontact\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "Dealercontact.json"
								}
							}
						]
					},
					{
						"name": "BCConnect_pipe_organization",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "BCConnect_pipe_dealercontact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"public\".\"organization\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "Organization.json"
								}
							}
						]
					},
					{
						"name": "BCConnect_pipe_project",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "BCConnect_pipe_organization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"public\".\"project\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "project.json"
								}
							}
						]
					},
					{
						"name": "BCConnect_pipe_salesstatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "BCConnect_pipe_project",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"public\".\"salesstatus\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "salesstatus.json"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/TableMetaData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBA_Grab_PostGres_DDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Grab_PostGres_DDL",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "\"public\".\"builder\""
							},
							{
								"name": "Destination",
								"value": "@{'Demo'}/@{'Postgres_salesstatus_DDL.txt'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "SELECT                                          \n  'CREATE TABLE ' || relname || E'\\n(\\n' ||\n  array_to_string(\n    array_agg(\n      '    ' || column_name || ' ' ||  type || ' '|| not_null\n    )\n    , E',\\n'\n  ) || E'\\n);\\n'\nfrom\n(\n  SELECT \n    c.relname, a.attname AS column_name,\n    pg_catalog.format_type(a.atttypid, a.atttypmod) as type,\n    case \n      when a.attnotnull\n    then 'NOT NULL' \n    else 'NULL' \n    END as not_null \n  FROM pg_class c,\n   pg_attribute a,\n   pg_type t\n   WHERE c.relname = 'bcuserorganizationrole'\n   AND a.attnum > 0\n   AND a.attrelid = c.oid\n   AND a.atttypid = t.oid\n ORDER BY a.attnum\n) as tabledefinition\ngroup by relname;"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "PostGres_bcuserorganizationrole_DDL.txt"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBA_Grab_PostGres_KeyColUsage_info')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "Select * \nfrom \"information_schema\".\"key_column_usage\" \nwhere \"table_schema\" = 'public' \n "
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "PostGresKeyColUsage.json"
								}
							}
						]
					},
					{
						"name": "Copy Data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Demo/PostGresKeyColUsage.json"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'Staging].[PostGres_KeyColUsage_info]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"constraint_catalog": "constraint_catalog",
									"constraint_schema": "constraint_schema",
									"constraint_name": "constraint_name",
									"table_catalog": "table_catalog",
									"table_schema": "table_schema",
									"table_name": "table_name",
									"column_name": "column_name",
									"ordinal_position": "ordinal_position",
									"position_in_unique_constraint": "position_in_unique_constraint"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_q8p",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_q8p",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_q8p')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_q8p')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBA_Grab_PostGres_tableschema_info')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Grab_PostGres_info",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select c.table_catalog\n, c.table_schema\n, c.table_name\n, c.column_name\n, c.ordinal_position\n, c.data_type\n, c.character_maximum_length\n, c.numeric_precision\n, c.numeric_precision_radix\n, c.numeric_scale\n, c.datetime_precision\n, c.udt_name\nfrom \"information_schema\".\"columns\" c\nWHERe c.\"table_schema\" = 'public'"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "PostGres.json"
								}
							}
						]
					},
					{
						"name": "Load_Staging_PostGres_info",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Grab_PostGres_info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Demo/PostGres.json"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'Staging].[PostGres_info]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"table_catalog": "table_catalog",
									"table_schema": "table_schema",
									"table_name": "table_name",
									"column_name": "column_name",
									"ordinal_position": "ordinal_position",
									"data_type": "data_type",
									"character_maximum_length": "character_maximum_length",
									"numeric_precision": "numeric_precision",
									"numeric_precision_radix": "numeric_precision_radix",
									"numeric_scale": "numeric_scale",
									"datetime_precision": "datetime_precision",
									"udt_name": "udt_name"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PostGresKeyColUsage_json",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "StageDB_PostGres_info",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/PostGresKeyColUsage_json')]",
				"[concat(variables('factoryId'), '/datasets/StageDB_PostGres_info')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_MOM_MOMT_ADJUSTMENT_TYPE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MOMT_ADJUSTMENT_TYPE_to_json",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from \"MOMT\".\"ADJUSTMENT_TYPE\""
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "MOMT_ADJUSTMENT_TYPE",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Raw\\MOM",
									"TableName": "MOMT_Adjustment_type.json"
								}
							}
						]
					},
					{
						"name": "CopyFromJsonToSQLDB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MOMT_ADJUSTMENT_TYPE_to_json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Raw/MOM",
									"TableName": "MOMT_Adjustment_type.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MOM_MOMT_Adjustment_Type_DB",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MOMT_ADJUSTMENT_TYPE')]",
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/MOM_MOMT_Adjustment_Type_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_MOM_MOMT_CARRIER_to_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_MOM_CARRIER_to_SQLDB",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Demo/Dealercontact.json"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'Staging].[dealercontact]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "SELECT PS_VENDOR_ID\n      ,CARRIER_SCAC\n      ,CARRIER_STATUS_CD\n      ,CARRIER_CREATE_UID\n      ,CARRIER_CREATE_TS\n      ,CARRIER_NAME\n      ,CONTRACT_FLAG\n      ,CONTRACT_EFF_DT\n      ,CONTRACT_AUTH_FLAG\n      ,CONTRACT_PRFL_FLAG\n      ,CURRENCY_CD\n      ,W9_FLAG\n      ,GNRLLBLTY_EXP_DT\n      ,AUTOLBLTY_EXP_DT\n      ,CARGO_EXP_DT\n      ,WRKRSCMP_EXP_DT\n      ,INSURANCE_DED_AMT\n      ,ADTNL_INSURED_FLAG\n      ,TCKLR_COMMENT_TXT\n      ,TCKLR_DATE\n      ,LAST_UPDT_UID\n      ,LAST_UPDT_TS\n      ,CARRIER_URL_TXT\n      ,MOTOR_CARRIER_NBR\n      ,RMT_VNDR_ADDR_SEQ\n      ,PS_VENDOR_LOC\n      ,CARRIER_TYPE_CD\n      ,CARRIER_TERMS_CD\n      ,Current_Date AS ROWCHANGETS\n      FROM \"MOMT\".\"CARRIER\""
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "TRUNCATE TABLE MOM.MOMT_CARRIER"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"PS_VENDOR_ID": " PS_VENDOR_ID",
									" CARRIER_SCAC": " CARRIER_SCAC",
									" CARRIER_STATUS_CD": " CARRIER_STATUS_CD",
									" CARRIER_CREATE_UID": " CARRIER_CREATE_UID",
									" CARRIER_CREATE_TS": " CARRIER_CREATE_TS",
									" CARRIER_NAME": " CARRIER_NAME",
									" CONTRACT_FLAG": " CONTRACT_FLAG",
									" CONTRACT_EFF_DT": " CONTRACT_EFF_DT",
									" CONTRACT_AUTH_FLAG": " CONTRACT_AUTH_FLAG",
									" CONTRACT_PRFL_FLAG": " CONTRACT_PRFL_FLAG",
									" CURRENCY_CD": " CURRENCY_CD",
									" W9_FLAG": " W9_FLAG",
									" GNRLLBLTY_EXP_DT": " GNRLLBLTY_EXP_DT",
									" AUTOLBLTY_EXP_DT": " AUTOLBLTY_EXP_DT",
									" CARGO_EXP_DT": " CARGO_EXP_DT",
									" WRKRSCMP_EXP_DT": " WRKRSCMP_EXP_DT",
									" INSURANCE_DED_AMT": " INSURANCE_DED_AMT",
									" ADTNL_INSURED_FLAG": " ADTNL_INSURED_FLAG",
									" TCKLR_COMMENT_TXT": " TCKLR_COMMENT_TXT",
									" TCKLR_DATE": " TCKLR_DATE",
									" LAST_UPDT_UID": " LAST_UPDT_UID",
									" LAST_UPDT_TS": " LAST_UPDT_TS",
									" CARRIER_URL_TXT": " CARRIER_URL_TXT",
									" MOTOR_CARRIER_NBR": " MOTOR_CARRIER_NBR",
									" RMT_VNDR_ADDR_SEQ": " RMT_VNDR_ADDR_SEQ",
									" PS_VENDOR_LOC": " PS_VENDOR_LOC",
									" CARRIER_TYPE_CD": " CARRIER_TYPE_CD",
									" CARRIER_TERMS_CD": " CARRIER_TERMS_CD",
									" ROWCHANGETS": " ROWCHANGETS"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Read_MOMT_CARRIER",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Load_MOM_MOMT_CARRIER_SQLDB",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Read_MOMT_CARRIER')]",
				"[concat(variables('factoryId'), '/datasets/Load_MOM_MOMT_CARRIER_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SL_pipe_using_sp_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The @Source in the sp must match a value in a parameter in the pipeline that then matches the table name in the sink\nAlso, have to use all the columns in the user defined table types, otherwise you get the following error:\nActivity Copy Data1 failed: ErrorCode=FailedDbOperation,'Type=Microsoft.DataTransfer.Common.Shared.HybridDeliveryException,Message=A database operation failed with the following error: 'Trying to pass a table-valued parameter with 2 column(s) where the corresponding user-defined table type requires 16 column(s).',Source=,''Type=System.Data.SqlClient.SqlException,Message=Trying to pass a table-valued parameter with 2 column(s) where the corresponding user-defined table type requires 16 column(s).,Source=.Net SqlClient Data Provider,SqlErrorNumber=500,Class=16,ErrorCode=-2146232060,State=1,Errors=[{Class=16,Number=500,State=1,Message=Trying to pass a table-valued parameter with 2 column(s) where the corresponding user-defined table type requires 16 column(s).,},],'",
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"sqlWriterStoredProcedureName": "[concat('[', 'zDBA].[usp_Builder_Load_test]')]",
								"sqlWriterTableType": ""
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "Builder2.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Source"
								}
							}
						]
					}
				],
				"parameters": {
					"SinkTableName": {
						"type": "String",
						"defaultValue": "Source"
					}
				},
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_ALDS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference",
								"parameters": {
									"rootpath": "Demo",
									"TableName": "builder.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BCConnect_Public_builder",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/BCConnect_Public_builder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_BCConnect_to_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "Select * from \"public\".\"builder\""
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BCConnect",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "BCConnect_Public_builder",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/BCConnect_Public_builder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_BCConnectPreStage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Loads data into the Pre-staging area (BCConnect schema) from the ADLS files.",
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create Audit Log - Started",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.SourceTableName}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.SinkFilePath}/@{pipeline().parameters.SinkFileName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": {
									"value": "@pipeline().parameters.SourceReaderQuery",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DS_BCConnect",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.SinkFilePath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"format": "JsonFormat"
								}
							}
						]
					},
					{
						"name": "Create Audit Log - Started",
						"description": "Create an AuditLog entry with a status of \"Started\", for tracking the execution of each data load.",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[concat('[', 'CTL].[usp_ETLAuditLog]')]",
								"storedProcedureParameters": {
									"ActivityId": {
										"type": "String",
										"value": "1"
									},
									"ActivityName": {
										"type": "String",
										"value": "Create Audit Log - Started"
									},
									"AuditLogID": {
										"type": "Int64",
										"value": ""
									},
									"ErrorMsg": {
										"type": "String",
										"value": ""
									},
									"ETLAuditLogId": {
										"type": "Int64",
										"value": ""
									},
									"ETLBatchID": {
										"type": "Int64",
										"value": {
											"value": "@pipeline().parameters.ETLBatchID",
											"type": "Expression"
										}
									},
									"ETLControlID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ETLControlID",
											"type": "Expression"
										}
									},
									"ETLStartTime": {
										"type": "DateTime",
										"value": ""
									},
									"LoadStatus": {
										"type": "String",
										"value": "Started"
									},
									"LogType": {
										"type": "String",
										"value": "ADF"
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"PipelineTriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"RowsInserted": {
										"type": "Int32",
										"value": "0"
									},
									"RowsUpdated": {
										"type": "Int32",
										"value": "0"
									},
									"SinkName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SinkFileName",
											"type": "Expression"
										}
									},
									"SourceName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SourceTableName",
											"type": "Expression"
										}
									},
									"SourceSystem": {
										"type": "String",
										"value": "BCConnect"
									}
								}
							},
							"dataset": {
								"referenceName": "StageDB_PostGres_info",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "AuditLog - Completed",
						"description": "Update the status of the AuditLog as \"Completed\", to indicate successful completion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'CTL].[usp_ETLAuditLog]')]",
							"storedProcedureParameters": {
								"ActivityId": {
									"value": "3",
									"type": "String"
								},
								"ActivityName": {
									"value": "Load Complete",
									"type": "String"
								},
								"AuditLogID": {
									"value": "",
									"type": "Int64"
								},
								"ErrorMsg": {
									"value": "",
									"type": "String"
								},
								"ETLAuditLogId": {
									"value": "",
									"type": "Int64"
								},
								"ETLBatchID": {
									"value": {
										"value": "@pipeline().parameters.ETLBatchID",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ETLControlID": {
									"value": {
										"value": "@pipeline().parameters.ETLControlID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ETLStartTime": {
									"value": "",
									"type": "DateTime"
								},
								"LoadStatus": {
									"value": "Completed",
									"type": "String"
								},
								"LogType": {
									"value": "ADF",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsInserted": {
									"value": {
										"value": "@activity('Copy Data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsUpdated": {
									"value": "0",
									"type": "Int32"
								},
								"SinkName": {
									"value": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceSystem": {
									"value": "BCConnect",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "AuditLog - Failed",
						"description": "Update the status of the AuditLog record as \"Failed\"",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'CTL].[usp_ETLAuditLog]')]",
							"storedProcedureParameters": {
								"ActivityId": {
									"value": "4",
									"type": "String"
								},
								"ActivityName": {
									"value": "AuditLog - Failed",
									"type": "String"
								},
								"AuditLogID": {
									"value": "",
									"type": "Int64"
								},
								"ErrorMsg": {
									"value": "",
									"type": "String"
								},
								"ETLAuditLogId": {
									"value": "",
									"type": "Int64"
								},
								"ETLBatchID": {
									"value": {
										"value": "@pipeline().parameters.ETLBatchID",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ETLControlID": {
									"value": {
										"value": "@pipeline().parameters.ETLControlID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ETLStartTime": {
									"value": "",
									"type": "DateTime"
								},
								"LoadStatus": {
									"value": "Failed",
									"type": "String"
								},
								"LogType": {
									"value": "ADF",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsInserted": {
									"value": "",
									"type": "Int32"
								},
								"RowsUpdated": {
									"value": "",
									"type": "Int32"
								},
								"SinkName": {
									"value": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceSystem": {
									"value": "BCConnect",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"SinkFileName": {
						"type": "String",
						"defaultValue": "SalesStatus_20181029.json"
					},
					"SinkFilePath": {
						"type": "String",
						"defaultValue": "Raw\\BCConnect\\SalesStatus"
					},
					"SourceReaderQuery": {
						"type": "String",
						"defaultValue": "SELECT * From public.salesstatus"
					},
					"SourceTableName": {
						"type": "String",
						"defaultValue": "\"public\".\"salesstatus\""
					},
					"ETLControlID": {
						"type": "Int",
						"defaultValue": 1
					},
					"ETLBatchID": {
						"type": "Int",
						"defaultValue": 1
					}
				},
				"variables": {
					"AuditLogId": {
						"type": "String",
						"defaultValue": "IsAwesome!!!"
					}
				},
				"folder": {
					"name": "PreStage"
				},
				"annotations": [
					"BC Connect"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/StageDB_PostGres_info')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_BCConnectPreStage_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetTableList",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "  SELECT * FROM [CTL].[fn_getTableList]('BCCONNECT', 'PreStage', 1)"
							},
							"dataset": {
								"referenceName": "DS_SQLDB",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "dbo.Test"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('GetTableList').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute BCConnectSource",
									"type": "ExecutePipeline",
									"userProperties": [
										{
											"name": "TestProp",
											"value": "@item().SourceReaderQuery"
										}
									],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipe_BCConnectPreStage",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"SinkFileName": {
												"value": "@item().SinkFileName",
												"type": "Expression"
											},
											"SinkFilePath": {
												"value": "@item().SinkFilePath",
												"type": "Expression"
											},
											"SourceReaderQuery": {
												"value": "@item().SourceReaderQuery",
												"type": "Expression"
											},
											"SourceTableName": {
												"value": "@item().SourceTableName",
												"type": "Expression"
											},
											"ETLControlID": {
												"value": "@item().ETLControlID",
												"type": "Expression"
											},
											"ETLBatchID": {
												"value": "@pipeline().parameters.ETLBatchID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ETLBatchID": {
						"type": "Int",
						"defaultValue": 100
					}
				},
				"variables": {
					"TestVar": {
						"type": "String"
					},
					"TestVar2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PreStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/pipe_BCConnectPreStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_BCConnectSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "test",
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create Audit Log - Started",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.SourceTableName}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.SinkFilePath}/@{pipeline().parameters.SinkFileName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": {
									"value": "@pipeline().parameters.SourceReaderQuery",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DS_BCConnect",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.SinkFilePath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"format": "JsonFormat"
								}
							}
						]
					},
					{
						"name": "Create Audit Log - Started",
						"description": "Create an AuditLog entry with a status of \"Started\", for tracking the execution of each data load.",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[concat('[', 'CTL].[usp_ETLAuditLog]')]",
								"storedProcedureParameters": {
									"ActivityId": {
										"type": "String",
										"value": "1"
									},
									"ActivityName": {
										"type": "String",
										"value": "Create Audit Log - Started"
									},
									"AuditLogID": {
										"type": "Int64",
										"value": null
									},
									"ErrorMsg": {
										"type": "String",
										"value": null
									},
									"ETLAuditLogId": {
										"type": "Int64",
										"value": null
									},
									"ETLBatchID": {
										"type": "Int64",
										"value": {
											"value": "@pipeline().parameters.ETLBatchID",
											"type": "Expression"
										}
									},
									"ETLControlID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ETLControlID",
											"type": "Expression"
										}
									},
									"ETLStartTime": {
										"type": "DateTime",
										"value": null
									},
									"LoadStatus": {
										"type": "String",
										"value": "Started"
									},
									"LogType": {
										"type": "String",
										"value": "ADF"
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"PipelineTriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"RowsInserted": {
										"type": "Int32",
										"value": "0"
									},
									"RowsUpdated": {
										"type": "Int32",
										"value": "0"
									},
									"SinkName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SinkFileName",
											"type": "Expression"
										}
									},
									"SourceName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SourceTableName",
											"type": "Expression"
										}
									},
									"SourceSystem": {
										"type": "String",
										"value": "BCConnect"
									}
								}
							},
							"dataset": {
								"referenceName": "StageDB_PostGres_info",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "AuditLog - Completed",
						"description": "Update the status of the AuditLog as \"Completed\", to indicate successful completion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'CTL].[usp_ETLAuditLog]')]",
							"storedProcedureParameters": {
								"ActivityId": {
									"value": "3",
									"type": "String"
								},
								"ActivityName": {
									"value": "Load Complete",
									"type": "String"
								},
								"AuditLogID": {
									"value": null,
									"type": "Int64"
								},
								"ErrorMsg": {
									"value": null,
									"type": "String"
								},
								"ETLAuditLogId": {
									"value": null,
									"type": "Int64"
								},
								"ETLBatchID": {
									"value": {
										"value": "@pipeline().parameters.ETLBatchID",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ETLControlID": {
									"value": {
										"value": "@pipeline().parameters.ETLControlID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ETLStartTime": {
									"value": null,
									"type": "DateTime"
								},
								"LoadStatus": {
									"value": "Completed",
									"type": "String"
								},
								"LogType": {
									"value": "ADF",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsInserted": {
									"value": {
										"value": "@activity('Copy Data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsUpdated": {
									"value": "0",
									"type": "Int32"
								},
								"SinkName": {
									"value": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceSystem": {
									"value": "BCConnect",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "AuditLog - Failed",
						"description": "Update the status of the AuditLog record as \"Failed\"",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'CTL].[usp_ETLAuditLog]')]",
							"storedProcedureParameters": {
								"ActivityId": {
									"value": "4",
									"type": "String"
								},
								"ActivityName": {
									"value": "AuditLog - Failed",
									"type": "String"
								},
								"AuditLogID": {
									"value": null,
									"type": "Int64"
								},
								"ErrorMsg": {
									"value": null,
									"type": "String"
								},
								"ETLAuditLogId": {
									"value": null,
									"type": "Int64"
								},
								"ETLBatchID": {
									"value": {
										"value": "@pipeline().parameters.ETLBatchID",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ETLControlID": {
									"value": {
										"value": "@pipeline().parameters.ETLControlID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ETLStartTime": {
									"value": null,
									"type": "DateTime"
								},
								"LoadStatus": {
									"value": "Failed",
									"type": "String"
								},
								"LogType": {
									"value": "ADF",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsInserted": {
									"value": null,
									"type": "Int32"
								},
								"RowsUpdated": {
									"value": null,
									"type": "Int32"
								},
								"SinkName": {
									"value": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceSystem": {
									"value": "BCConnect",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"SinkFileName": {
						"type": "String",
						"defaultValue": "SalesStatus_20181029.json"
					},
					"SinkFilePath": {
						"type": "String",
						"defaultValue": "Raw\\BCConnect\\SalesStatus"
					},
					"SourceReaderQuery": {
						"type": "String",
						"defaultValue": "SELECT * From public.salesstatus"
					},
					"SourceTableName": {
						"type": "String",
						"defaultValue": "\"public\".\"salesstatus\""
					},
					"ETLControlID": {
						"type": "Int",
						"defaultValue": 1
					},
					"ETLBatchID": {
						"type": "Int",
						"defaultValue": 1
					}
				},
				"variables": {
					"AuditLogId": {
						"type": "String",
						"defaultValue": "IsAwesome!!!"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [
					"BC Connect"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BCConnect')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/StageDB_PostGres_info')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_BCConnectSource_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetTableList",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "  SELECT * FROM [CTL].[fn_getTableList]('BCCONNECT', 'Source', 1)"
							},
							"dataset": {
								"referenceName": "DS_SQLDB",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "dbo.Test"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('GetTableList').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute BCConnectSource",
									"type": "ExecutePipeline",
									"userProperties": [
										{
											"name": "TestProp",
											"value": "@item().SourceReaderQuery"
										}
									],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipe_BCConnectSource",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"SinkFileName": {
												"value": "@item().SinkFileName",
												"type": "Expression"
											},
											"SinkFilePath": {
												"value": "@item().SinkFilePath",
												"type": "Expression"
											},
											"SourceReaderQuery": {
												"value": "@item().SourceReaderQuery",
												"type": "Expression"
											},
											"SourceTableName": {
												"value": "@item().SourceTableName",
												"type": "Expression"
											},
											"ETLControlID": {
												"value": "@item().ETLControlID",
												"type": "Expression"
											},
											"ETLBatchID": {
												"value": "@pipeline().parameters.ETLBatchID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ETLBatchID": {
						"type": "Int",
						"defaultValue": 100
					}
				},
				"variables": {
					"TestVar": {
						"type": "String"
					},
					"TestVar2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Source"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/pipe_BCConnectSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_MOMSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.SourceTableName}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.SinkFilePath}/@{pipeline().parameters.SinkFileName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": {
									"value": "@pipeline().parameters.SourceReaderQuery",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DS_MOM",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.SinkFilePath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.SinkFileName",
										"type": "Expression"
									},
									"format": "JsonFormat"
								}
							}
						]
					}
				],
				"parameters": {
					"SinkFileName": {
						"type": "String",
						"defaultValue": "MOMP_SOLDTO_20181030.json"
					},
					"SinkFilePath": {
						"type": "String",
						"defaultValue": "Raw\\MOM"
					},
					"SourceReaderQuery": {
						"type": "String",
						"defaultValue": "SELECT * from MOMP.SOLDTO"
					},
					"SourceTableName": {
						"type": "String",
						"defaultValue": "\"MOMP\".\"SOLDTO\""
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [
					"BC MOM"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MOM')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.SourceFilePath}/@{pipeline().parameters.SourceFileName}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.SinkTableName}"
							},
							{
								"name": "foo",
								"value": "hehehr"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.SinkWriteBatchSize",
									"type": "Expression"
								},
								"sqlWriterStoredProcedureName": {
									"value": "@pipeline().parameters.SinkStoredProcedureName",
									"type": "Expression"
								},
								"sqlWriterTableType": {
									"value": "@pipeline().parameters.SinkTableType",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"BatchID": {
										"type": "Int64",
										"value": "-1"
									}
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.SourceFilePath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.SourceFileName",
										"type": "Expression"
									},
									"format": "JsonFormat"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQLDB",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.SinkTableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"BatchId": {
						"type": "Int",
						"defaultValue": -1
					},
					"SourceFileName": {
						"type": "String",
						"defaultValue": "SalesStatus_20181001.json"
					},
					"SourceFilePath": {
						"type": "String",
						"defaultValue": "Raw\\BCConnect\\SalesStatus"
					},
					"SinkWriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					},
					"SinkPreCopyScript": {
						"type": "String",
						"defaultValue": "TRUNCATE TABLE BCConnect.Public_SalesStatus"
					},
					"SinkStoredProcedureName": {
						"type": "String",
						"defaultValue": "[concat('[', 'BCConnect].[usp_Public_SalesStatus_Load]')]"
					},
					"SinkTableType": {
						"type": "String",
						"defaultValue": "BCConnect.Public_SalesStatus_Type"
					},
					"SinkTableName": {
						"type": "String",
						"defaultValue": "Source"
					}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": [
					"BC Azure DW"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "JSONCopy_MOMT_Adjustment_type",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "BCConnect_Public_builder",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Sandbox"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONCopy_MOMT_Adjustment_type')]",
				"[concat(variables('factoryId'), '/datasets/BCConnect_Public_builder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipefoo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String",
						"defaultValue": "dbo.Test"
					}
				},
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BCConnect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_BCConnect",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String",
						"defaultValue": "organization"
					}
				},
				"type": "RelationalTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BCConnect_Project')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "ProjectId",
						"type": "Int32"
					},
					{
						"name": "ProjectName",
						"type": "String"
					},
					{
						"name": "ProjectNumber",
						"type": "String"
					},
					{
						"name": "DealerId",
						"type": "Int32"
					},
					{
						"name": "BuilderId",
						"type": "Int32"
					},
					{
						"name": "OrganizationId",
						"type": "Int32"
					},
					{
						"name": "SalesStatusId",
						"type": "Int32"
					},
					{
						"name": "CreatedDate",
						"type": "DateTime"
					},
					{
						"name": "ModifiedDate",
						"type": "DateTime"
					},
					{
						"name": "ProjectValue",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'BCConnect].[Project]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BCConnect_Public_builder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[concat('[', 'BCConnect].[Public_builder]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BCConnect_Public_dealercontact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "dealercontactid",
						"type": "Int32"
					},
					{
						"name": "contactid",
						"type": "Int32"
					},
					{
						"name": "dealerid",
						"type": "Int32"
					},
					{
						"name": "organizationid",
						"type": "Int32"
					},
					{
						"name": "isdeleted",
						"type": "String"
					},
					{
						"name": "createdon",
						"type": "DateTime"
					},
					{
						"name": "createdby",
						"type": "Int32"
					},
					{
						"name": "modifiedon",
						"type": "DateTime"
					},
					{
						"name": "modifiedby",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'BCConnect].[Public_dealercontact]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Builder2_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "projectid",
						"type": "Int64"
					},
					{
						"name": "owningorganizationid",
						"type": "Int64"
					},
					{
						"name": "builderid",
						"type": "Int64"
					},
					{
						"name": "projectname",
						"type": "String"
					},
					{
						"name": "projectnumber",
						"type": "String"
					},
					{
						"name": "createdon",
						"type": "String"
					},
					{
						"name": "projectvalue",
						"type": "String"
					},
					{
						"name": "salesstatusid",
						"type": "Int64"
					},
					{
						"name": "dealerid",
						"type": "Int64"
					},
					{
						"name": "modifiedon",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects",
						"jsonPathDefinition": {
							"projectid": "$.['projectid']",
							"owningorganizationid": "$.['owningorganizationid']",
							"builderid": "$.['builderid']",
							"projectname": "$.['projectname']",
							"projectnumber": "$.['projectnumber']",
							"createdon": "$.['createdon']",
							"projectvalue": "$.['projectvalue']",
							"salesstatusid": "$.['salesstatusid']",
							"dealerid": "$.['dealerid']",
							"modifiedon": "$.['modifiedon']"
						}
					},
					"fileName": "Builder2.json",
					"folderPath": "Demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String",
						"defaultValue": "Raw\\BCConnect\\Builder"
					},
					"fileName": {
						"type": "String",
						"defaultValue": "builder_20181001.json"
					},
					"format": {
						"type": "String",
						"defaultValue": "JsonFormat"
					}
				},
				"folder": {
					"name": "BC DW"
				},
				"annotations": [
					"BC Connect"
				],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"fileName": {
						"value": "@dataset().fileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BCConnect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_BCConnect",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "String",
						"defaultValue": "\"public\".\"project\""
					}
				},
				"folder": {
					"name": "BC Connect"
				},
				"annotations": [
					"BC Connect"
				],
				"type": "RelationalTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MOM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DB2_Prod_Wood1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "String",
						"defaultValue": "\"MOMP\".\"SOLDTO\""
					}
				},
				"type": "RelationalTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "String",
						"defaultValue": "dbo.Test"
					}
				},
				"folder": {
					"name": "BC DW"
				},
				"annotations": [
					"BC Connect"
				],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DealerContact_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "dealercontactid",
						"type": "Int64"
					},
					{
						"name": "contactid",
						"type": "Int64"
					},
					{
						"name": "dealerid",
						"type": "Int64"
					},
					{
						"name": "organizationid",
						"type": "Int64"
					},
					{
						"name": "isdeleted",
						"type": "Boolean"
					},
					{
						"name": "createdon",
						"type": "String"
					},
					{
						"name": "createdby",
						"type": "Int64"
					},
					{
						"name": "modifiedon",
						"type": "String"
					},
					{
						"name": "modifiedby",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects",
						"jsonPathDefinition": {
							"dealercontactid": "$.['dealercontactid']",
							"contactid": "$.['contactid']",
							"dealerid": "$.['dealerid']",
							"organizationid": "$.['organizationid']",
							"isdeleted": "$.['isdeleted']",
							"createdon": "$.['createdon']",
							"createdby": "$.['createdby']",
							"modifiedon": "$.['modifiedon']",
							"modifiedby": "$.['modifiedby']"
						}
					},
					"fileName": "Dealercontact.json",
					"folderPath": "Demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_q8p')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "constraint_catalog",
						"type": "String"
					},
					{
						"name": "constraint_schema",
						"type": "String"
					},
					{
						"name": "constraint_name",
						"type": "String"
					},
					{
						"name": "table_catalog",
						"type": "String"
					},
					{
						"name": "table_schema",
						"type": "String"
					},
					{
						"name": "table_name",
						"type": "String"
					},
					{
						"name": "column_name",
						"type": "String"
					},
					{
						"name": "ordinal_position",
						"type": "Int32"
					},
					{
						"name": "position_in_unique_constraint",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'Staging].[PostGres_KeyColUsage_info]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSONCopy_MOMT_Adjustment_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"rootpath": {
						"type": "String",
						"defaultValue": "Demo"
					},
					"TableName": {
						"type": "String",
						"defaultValue": "Builder2.json"
					}
				},
				"folder": {
					"name": "Sandbox"
				},
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects"
					},
					"fileName": "momt_adjustment_type.json",
					"folderPath": "Raw/MOM"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_BCConnect_Public_organization')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[concat('[', 'BCConnect].[Public_organization]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_MOM_MOMT_CARRIER_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PS_VENDOR_ID",
						"type": "String"
					},
					{
						"name": "CARRIER_SCAC",
						"type": "String"
					},
					{
						"name": "CARRIER_STATUS_CD",
						"type": "String"
					},
					{
						"name": "CARRIER_CREATE_UID",
						"type": "String"
					},
					{
						"name": "CARRIER_CREATE_TS",
						"type": "DateTime"
					},
					{
						"name": "CARRIER_NAME",
						"type": "String"
					},
					{
						"name": "CONTRACT_FLAG",
						"type": "String"
					},
					{
						"name": "CONTRACT_EFF_DT",
						"type": "DateTime"
					},
					{
						"name": "CONTRACT_AUTH_FLAG",
						"type": "String"
					},
					{
						"name": "CONTRACT_PRFL_FLAG",
						"type": "String"
					},
					{
						"name": "CURRENCY_CD",
						"type": "String"
					},
					{
						"name": "W9_FLAG",
						"type": "String"
					},
					{
						"name": "GNRLLBLTY_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "AUTOLBLTY_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "CARGO_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "WRKRSCMP_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "INSURANCE_DED_AMT",
						"type": "Int32"
					},
					{
						"name": "ADTNL_INSURED_FLAG",
						"type": "String"
					},
					{
						"name": "TCKLR_COMMENT_TXT",
						"type": "String"
					},
					{
						"name": "TCKLR_DATE",
						"type": "DateTime"
					},
					{
						"name": "LAST_UPDT_UID",
						"type": "String"
					},
					{
						"name": "LAST_UPDT_TS",
						"type": "DateTime"
					},
					{
						"name": "CARRIER_URL_TXT",
						"type": "String"
					},
					{
						"name": "MOTOR_CARRIER_NBR",
						"type": "String"
					},
					{
						"name": "RMT_VNDR_ADDR_SEQ",
						"type": "Int32"
					},
					{
						"name": "PS_VENDOR_LOC",
						"type": "String"
					},
					{
						"name": "CARRIER_TYPE_CD",
						"type": "String"
					},
					{
						"name": "CARRIER_TERMS_CD",
						"type": "String"
					},
					{
						"name": "ROWCHANGETS",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'MOM].[MOMT_CARRIER]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/MOMT_ADJUSTMENT_TYPE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DB2_Test_Wood1",
					"type": "LinkedServiceReference"
				},
				"type": "RelationalTable",
				"typeProperties": {
					"tableName": "\"MOMT\".\"ADJUSTMENT_TYPE\""
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/MOM_MOMT_Adjustment_Type_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[concat('[', 'MOM].[MOMT_ADJUSTMENT_TYPE]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostGresKeyColUsage_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "table_catalog",
						"type": "String"
					},
					{
						"name": "table_schema",
						"type": "String"
					},
					{
						"name": "table_name",
						"type": "String"
					},
					{
						"name": "column_name",
						"type": "String"
					},
					{
						"name": "ordinal_position",
						"type": "Int64"
					},
					{
						"name": "data_type",
						"type": "String"
					},
					{
						"name": "character_maximum_length",
						"type": "String"
					},
					{
						"name": "numeric_precision",
						"type": "Int64"
					},
					{
						"name": "numeric_precision_radix",
						"type": "Int64"
					},
					{
						"name": "numeric_scale",
						"type": "Int64"
					},
					{
						"name": "datetime_precision",
						"type": "String"
					},
					{
						"name": "udt_name",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects"
					},
					"fileName": "PostGresKeyColUsage.json",
					"folderPath": "Demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Read_MOMT_CARRIER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DB2_Test_Wood1",
					"type": "LinkedServiceReference"
				},
				"type": "RelationalTable",
				"structure": [
					{
						"name": "PS_VENDOR_ID",
						"type": "String"
					},
					{
						"name": "CARRIER_SCAC",
						"type": "String"
					},
					{
						"name": "CARRIER_STATUS_CD",
						"type": "String"
					},
					{
						"name": "CARRIER_CREATE_UID",
						"type": "String"
					},
					{
						"name": "CARRIER_CREATE_TS",
						"type": "DateTime"
					},
					{
						"name": "CARRIER_NAME",
						"type": "String"
					},
					{
						"name": "CONTRACT_FLAG",
						"type": "String"
					},
					{
						"name": "CONTRACT_EFF_DT",
						"type": "DateTime"
					},
					{
						"name": "CONTRACT_AUTH_FLAG",
						"type": "String"
					},
					{
						"name": "CONTRACT_PRFL_FLAG",
						"type": "String"
					},
					{
						"name": "CURRENCY_CD",
						"type": "String"
					},
					{
						"name": "W9_FLAG",
						"type": "String"
					},
					{
						"name": "GNRLLBLTY_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "AUTOLBLTY_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "CARGO_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "WRKRSCMP_EXP_DT",
						"type": "DateTime"
					},
					{
						"name": "INSURANCE_DED_AMT",
						"type": "Int32"
					},
					{
						"name": "ADTNL_INSURED_FLAG",
						"type": "String"
					},
					{
						"name": "TCKLR_COMMENT_TXT",
						"type": "String"
					},
					{
						"name": "TCKLR_DATE",
						"type": "DateTime"
					},
					{
						"name": "LAST_UPDT_UID",
						"type": "String"
					},
					{
						"name": "LAST_UPDT_TS",
						"type": "DateTime"
					},
					{
						"name": "CARRIER_URL_TXT",
						"type": "String"
					},
					{
						"name": "MOTOR_CARRIER_NBR",
						"type": "String"
					},
					{
						"name": "RMT_VNDR_ADDR_SEQ",
						"type": "Int32"
					},
					{
						"name": "PS_VENDOR_LOC",
						"type": "String"
					},
					{
						"name": "CARRIER_TYPE_CD",
						"type": "String"
					},
					{
						"name": "CARRIER_TERMS_CD",
						"type": "String"
					},
					{
						"name": "ROWCHANGETS",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "\"MOMT\".\"CARRIER\""
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_q8p')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "constraint_catalog",
						"type": "String"
					},
					{
						"name": "constraint_schema",
						"type": "String"
					},
					{
						"name": "constraint_name",
						"type": "String"
					},
					{
						"name": "table_catalog",
						"type": "String"
					},
					{
						"name": "table_schema",
						"type": "String"
					},
					{
						"name": "table_name",
						"type": "String"
					},
					{
						"name": "column_name",
						"type": "String"
					},
					{
						"name": "ordinal_position",
						"type": "Int64"
					},
					{
						"name": "position_in_unique_constraint",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects",
						"jsonPathDefinition": {
							"constraint_catalog": "$.['constraint_catalog']",
							"constraint_schema": "$.['constraint_schema']",
							"constraint_name": "$.['constraint_name']",
							"table_catalog": "$.['table_catalog']",
							"table_schema": "$.['table_schema']",
							"table_name": "$.['table_name']",
							"column_name": "$.['column_name']",
							"ordinal_position": "$.['ordinal_position']",
							"position_in_unique_constraint": "$.['position_in_unique_constraint']"
						}
					},
					"fileName": "PostGresKeyColUsage.json",
					"folderPath": "Demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/StageDB_PostGres_info')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "table_catalog",
						"type": "String"
					},
					{
						"name": "table_schema",
						"type": "String"
					},
					{
						"name": "table_name",
						"type": "String"
					},
					{
						"name": "column_name",
						"type": "String"
					},
					{
						"name": "ordinal_position",
						"type": "Int32"
					},
					{
						"name": "data_type",
						"type": "String"
					},
					{
						"name": "character_maximum_length",
						"type": "Int32"
					},
					{
						"name": "numeric_precision",
						"type": "String"
					},
					{
						"name": "numeric_precision_radix",
						"type": "String"
					},
					{
						"name": "numeric_scale",
						"type": "String"
					},
					{
						"name": "datetime_precision",
						"type": "String"
					},
					{
						"name": "udt_name",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'Staging].[PostGres_info]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableMetaData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ods2",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[ADDRESS]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/organization_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects",
						"jsonPathDefinition": {
							"Column_1": "$"
						}
					},
					"fileName": "Organization.json",
					"folderPath": "Demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/trg_nightly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"BCDW"
				],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipe_demo",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2018-10-01T15:21:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipe_demo')]"
			]
		}
	]
}